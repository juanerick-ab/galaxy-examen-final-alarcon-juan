pipeline {
    agent {
        docker { image 'maven:3.6.3-openjdk-11-slim' }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B verify'
            }
        }
        stage('SonarQube analysis') {
            steps {
                script {
                    // Descargar y descomprimir SonarScanner con curl y tar
                    sh """
                        curl -sSLo sonar-scanner-cli-4.7.0.2747-linux.tar.gz https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.tar.gz
                        # Extraer el archivo directamente con tar
                        mkdir -p /opt/sonar-scanner
                        tar -xzf sonar-scanner-cli-4.7.0.2747-linux.tar.gz -C /opt/sonar-scanner --strip-components=1
                        rm sonar-scanner-cli-4.7.0.2747-linux.tar.gz
                    """

                    // Hacer ejecutable el sonar-scanner y ejecutarlo
                    sh """
                        chmod +x /opt/sonar-scanner/bin/sonar-scanner
                        /opt/sonar-scanner/bin/sonar-scanner \
                            -Dsonar.projectKey=labmaven01 \
                            -Dsonar.projectName=labmaven01 \
                            -Dsonar.sources=src/main \
                            -Dsonar.sourceEncoding=UTF-8 \
                            -Dsonar.language=java \
                            -Dsonar.tests=src/test \
                            -Dsonar.junit.reportsPath=target/surefire-reports \
                            -Dsonar.surefire.reportsPath=target/surefire-reports \
                            -Dsonar.jacoco.reportPath=target/jacoco.exec \
                            -Dsonar.java.binaries=target/classes \
                            -Dsonar.java.coveragePlugin=jacoco \
                            -Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco.xml \
                            -Dsonar.exclusions=**/*IT.java,**/*TEST.java,**/*Test.java,**/src/it**,**/src/test**,**/gradle/wrapper** \
                            -Dsonar.java.libraries=target/*.jar
                    """
                }
            }
        }
    }
}
